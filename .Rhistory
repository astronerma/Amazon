predict_train <- as.numeric(as.character(predict(t1)))
roc.area(train[[1]], predict_train)$A
t1
predict_train
t1 <- svm(action ~ .,data=log_train,type="C",kernel="radial",probability=T)
predict_train <- predict(t1,probability=T)
predict_train <- as.numeric(as.character(predict(t1)))
roc.area(train[[1]], predict_train)$A
plot(log_train[[2]],log_train[[1]])
log_train[[1]]
plot(log_train[[2]],log_train[[4]])
plot(log_train[[2]],log_train[[4]],col=log_train[[1]])
t2 <- glm(action ~.,data=log_train)
log_train[,2:17]<-log10(new_train[,2:17]+1e-3)
t2 <- glm(action ~.,data=log_train)
t2 <- glm(action ~.,data=log_train,family="binomial")
t2
predict_train <- predict(t2,probability=T)
predict_train <- as.numeric(as.character(predict(t2)))
roc.area(train[[1]], predict_train)$A
cv.glm(log_train,t2,cost=roc.area, K=5)
cost <- function(x,y) roc.area(x,y)
cv.glm(log_train,t2,cost, K=5)
cost <- function(x,y) return( roc.area(x,y))
cv.glm(log_train,t2,cost, K=5)
cost(train[[1]],predict_train)
cost(train[[1]],predict_train)^A
cost(train[[1]],predict_train)$A
cost <- function(x,y) return( roc.area(x,y)$A)
cv.glm(log_train,t2,cost, K=5)
cost <- function(x,y) return( roc.area(x,y)$A)
cv1<-cv.glm(log_train,t2,cost, K=5)
names(cv1)
cv1$delta
plot(log_train[[2]],log_train[[4]],col=log_train[[1]])
plot(log_train[[2]],log_train[[16]],col=log_train[[1]])
plot(log_train[[2]],log_train[[14]],col=log_train[[1]])
plot(log_train[[16]],log_train[[14]],col=log_train[[1]])
plot(jitter(log_train[[2]]),jitter(log_train[[14]]),col=log_train[[1]])
t2 <- glm(action ~.,data=log_train[,c(1,2,3,4,5)],family="binomial")
predict_train <- predict(t2,probability=T)
predict_train <- as.numeric(as.character(predict(t2)))
roc.area(train[[1]], predict_train)$A
t2
names(t2)
t2$formula
t2$model
t2$model[1:10]
t2$model[1:10,]
lines(t2$model[[2]],t2$model[[4]])
names(t2)
t2$boundary
plot(t2,log_train)
plot(t2,log_train[,c(1,2,3,4,5,6)])
plot(t2,log_train[,c(1,2,3,4,5)])
plot(t2,log_train[,c(1,2,3,4,5)])
t2 <- glm(action ~.,data=log_train[,c(1,2,3,4,5)],family="binomial")
plot(t1,log_train)
t1 <- svm(action ~ .,data=log_train,type="C",kernel="linear",probability=T)
plot(t1,log_train)
plot.svm(t1,log_train)
plot.svm(t1,log_train,log_train[[2]]~log_train[[4]])
plot(t1,log_train,log_train[[2]]~log_train[[4]])
names(log_train)
plot(t1,log_train,resource0~mgr0)
t2 <- glm(action ~.,data=log_train[,c(1,2,3,4,5)],family="binomial")
t2
summary(t2)
View(log_train)
t2 <- glm(action ~.,data=log_train[,c(1,2,3,4,5,14,15)],family="binomial")
t2
summary(t2)
t2 <- glm(action ~.,data=log_train,family="binomial")
summary(t2)
t2 <- glm(action ~.,data=log_train[c(1,2,3,4,5,12,14,17)],family="binomial")
summary(t2)
predict_train <- predict(t2,probability=T)
predict_train <- as.numeric(as.character(predict(t2)))
predict_train
predict_train <- predict(t2)
predict_train
predict_train <- predict(t2,type="response")
predict_train
predict_train <- as.numeric(as.character(predict(t2)))
predict_train
predict_train <- predict(t2,type="response")
predict_train
roc.area(train[[1]], predict_train)$A
t2 <- glm(action ~.,data=log_train[,c(1,2,3,4,5,12,14,17)],family="binomial")
summary(t2)
predict_train <- predict(t2,type="response")
predict_train
roc.area(train[[1]], predict_train)$A
kfold.glm<-function(data,k)
{
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
subset<-((i-1)*n+1):(i*n)
train<-data[-subset,]
test<-data[subset,]
# ----------
fit <- glm(action ~.,data=train[,c(1,2,3,4,5,12,14,17)],family="binomial")
prediction <- predict(fit,newdata=test)
# ----------
err<-roc.area(test[[1]],predict_prune)$A
err.vect[i]<-err
}
return(err.vect)
}
a<-kfold(log_train,5)
a<-kfold.glm(log_train,5)
kfold.glm<-function(data,k)
{
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
subset<-((i-1)*n+1):(i*n)
train<-data[-subset,]
test<-data[subset,]
# ----------
fit <- glm(action ~.,data=train[,c(1,2,3,4,5,12,14,17)],family="binomial")
prediction <- predict(fit,newdata=test)
# ----------
err<-roc.area(test[[1]],prediction)$A
err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,5)
kfold.glm<-function(data,k)
{
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
subset<-((i-1)*n+1):(i*n)
train<-data[-subset,]
test<-data[subset,]
# ----------
fit <- glm(action ~.,data=train[,c(1,2,3,4,5,12,14,17)],family="binomial")
prediction <- predict(fit,newdata=test)
# ----------
#err<-roc.area(test[[1]],prediction)$A
#err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,5)
kfold.glm<-function(data,k)
{
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
subset<-((i-1)*n+1):(i*n)
train<-data[-subset,]
test<-data[subset,]
# ----------
fit <- glm(action ~.,data=train[,c(1,2,3,4,5,12,14,17)],family="binomial")
prediction <- predict(fit,newdata=test,type="response")
# ----------
err <- roc.area(test[[1]],prediction)$A
#err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,5)
predict_train
kfold.glm<-function(data,k)
{
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
print(i)
subset<-((i-1)*n+1):(i*n)
train<-data[-subset,]
test<-data[subset,]
# ----------
fit <- glm(action ~.,data=train[,c(1,2,3,4,5,12,14,17)],family="binomial")
prediction <- predict(fit,newdata=test,type="response")
# ----------
#err <- roc.area(test[[1]],prediction)$A
#err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,1)
a<-kfold.glm(log_train,2)
a<-kfold.glm(log_train,5)
kfold.glm<-function(data,k)
{
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
print(i)
subset<-((i-1)*n+1):(i*n)
train<-data[-subset,]
test<-data[subset,]
# ----------
fit <- glm(action ~.,data=train[,c(1,2,3,4,5,12,14,17)],family="binomial")
prediction <- predict(fit,newdata=test,type="response")
# ----------
print(prediction)
#err <- roc.area(test[[1]],prediction)$A
#err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,2)
kfold.glm<-function(data,k)
{
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
print(i)
subset<-((i-1)*n+1):(i*n)
train<-data[-subset,]
test<-data[subset,]
# ----------
fit <- glm(action ~.,data=train[,c(1,2,3,4,5,12,14,17)],family="binomial")
prediction <- predict(fit,newdata=test,type="response")
# ----------
print(test[[1]])
#err <- roc.area(test[[1]],prediction)$A
#err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,2)
kfold.glm<-function(data,k)
{
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
print(i)
subset<-((i-1)*n+1):(i*n)
train<-data[-subset,]
test<-data[subset,]
# ----------
fit <- glm(action ~.,data=train[,c(1,2,3,4,5,12,14,17)],family="binomial")
prediction <- predict(fit,newdata=test,type="response")
# ----------
print(as.character(test[[1]]))
#err <- roc.area(test[[1]],prediction)$A
#err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,2)
kfold.glm<-function(data,k)
{
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
print(i)
subset<-((i-1)*n+1):(i*n)
train<-data[-subset,]
test<-data[subset,]
# ----------
fit <- glm(action ~.,data=train[,c(1,2,3,4,5,12,14,17)],family="binomial")
prediction <- predict(fit,newdata=test,type="response")
# ----------
print(as.numeric(as.character(test[[1]])))
#err <- roc.area(test[[1]],prediction)$A
#err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,2)
kfold.glm<-function(data,k)
{
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
print(i)
subset<-((i-1)*n+1):(i*n)
train<-data[-subset,]
test<-data[subset,]
# ----------
fit <- glm(action ~.,data=train[,c(1,2,3,4,5,12,14,17)],family="binomial")
prediction <- predict(fit,newdata=test,type="response")
# ----------
labels<-as.numeric(as.character(test[[1]])))
err <- roc.area(labels,prediction)$A
err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,2)
kfold.glm<-function(data,k)
{
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
#print(i)
subset<-((i-1)*n+1):(i*n)
train<-data[-subset,]
test<-data[subset,]
# ----------
fit <- glm(action ~.,data=train[,c(1,2,3,4,5,12,14,17)],family="binomial")
prediction <- predict(fit,newdata=test,type="response")
# ----------
labels<-as.numeric(as.character(test[[1]])))
err <- roc.area(labels,prediction)$A
err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,2)
kfold.glm<-function(data,k)
{
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
#print(i)
subset<-((i-1)*n+1):(i*n)
train<-data[-subset,]
test<-data[subset,]
# ----------
fit <- glm(action ~.,data=train[,c(1,2,3,4,5,12,14,17)],family="binomial")
prediction <- predict(fit,newdata=test,type="response")
# ----------
labels<-as.numeric(as.character(test[[1]]))
err <- roc.area(labels,prediction)$A
err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,2)
a
a<-kfold.glm(log_train,5)
a
kfold.glm<-function(data,k)
{
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
#print(i)
s1<-((i-1)*n+1)
s2<-(i*n)
print(s1,s2)
subset<-s1:s2
train<-data[-subset,]
test<-data[subset,]
# ----------
fit <- glm(action ~.,data=train[,c(1,2,3,4,5,12,14,17)],family="binomial")
prediction <- predict(fit,newdata=test,type="response")
# ----------
labels<-as.numeric(as.character(test[[1]]))
err <- roc.area(labels,prediction)$A
err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,5)
a
s1<-1
s2<-2
paste(s1,s2)
kfold.glm<-function(data,k)
{
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
#print(i)
s1<-((i-1)*n+1)
s2<-(i*n)
print(paste(s1,s2))
subset<-s1:s2
train<-data[-subset,]
test<-data[subset,]
# ----------
fit <- glm(action ~.,data=train[,c(1,2,3,4,5,12,14,17)],family="binomial")
prediction <- predict(fit,newdata=test,type="response")
# ----------
labels<-as.numeric(as.character(test[[1]]))
err <- roc.area(labels,prediction)$A
err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,5)
a
-c(1,2,3)
a<-kfold.glm(log_train,5)
a
source('~/.active-rstudio-document')
kfold.glm<-function(data,k)
{
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
#print(i)
s1<-((i-1)*n+1)
s2<-(i*n)
#print(paste(s1,s2))
subset<-s1:s2
train<-data[-subset,]
test<-data[subset,]
# ----------
fit <- glm(action ~.,data=train[,c(1,2,3,4,5,12,14,17)],family="binomial")
prediction <- predict(fit,newdata=test,type="response")
# ----------
labels<-as.numeric(as.character(test[[1]]))
err <- roc.area(labels,prediction)$A
err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,5)
a
kfold.glm<-function(data,k)
{
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
s1<-((i-1)*n+1)
s2<-(i*n)
subset<-s1:s2
train<-data[-subset,]
test<-data[subset,]
fit <- glm(action ~.,data=train,family="binomial")
prediction <- predict(fit,newdata=test,type="response")
labels<-as.numeric(as.character(test[[1]]))
err <- roc.area(labels,prediction)$A
err.vect[i]<-err
}
return(err.vect)
}
<-kfold.glm(log_train,5)
a
kfold.glm<-function(data,k)
{
s<-sample(1:nrow(data),nrow(data),replace=FALSE)
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
s1<-((i-1)*n+1)
s2<-(i*n)
subset<-s[s1:s2]
print(subset)
train<-data[-subset,]
test<-data[subset,]
fit <- glm(action ~.,data=train,family="binomial")
prediction <- predict(fit,newdata=test,type="response")
labels<-as.numeric(as.character(test[[1]]))
err <- roc.area(labels,prediction)$A
err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,2)
kfold.glm<-function(data,k)
{
s<-sample(1:nrow(data),nrow(data),replace=FALSE)
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
s1<-((i-1)*n+1)
s2<-(i*n)
subset<-s[s1:s2]
print(subset[1:10])
train<-data[-subset,]
test<-data[subset,]
fit <- glm(action ~.,data=train,family="binomial")
prediction <- predict(fit,newdata=test,type="response")
labels<-as.numeric(as.character(test[[1]]))
err <- roc.area(labels,prediction)$A
err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,2)
kfold.glm<-function(data,k)
{
s<-sample(1:nrow(data),nrow(data),replace=FALSE)
n<-as.integer(nrow(data)/k)
err.vect<-rep(NA,k)
for (i in 1:k)
{
s1<-((i-1)*n+1)
s2<-(i*n)
subset<-s[s1:s2]
#print(subset[1:10])
train<-data[-subset,]
test<-data[subset,]
fit <- glm(action ~.,data=train,family="binomial")
prediction <- predict(fit,newdata=test,type="response")
labels<-as.numeric(as.character(test[[1]]))
err <- roc.area(labels,prediction)$A
err.vect[i]<-err
}
return(err.vect)
}
a<-kfold.glm(log_train,5)
